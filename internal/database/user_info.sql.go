// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_info.sql

package database

import (
	"context"
	"database/sql"
)

const getUserInfoByUserId = `-- name: GetUserInfoByUserId :one
SELECT user_id, user_account, user_name, user_avatar, user_state, user_phone, user_gender, user_birthday, user_email, user_is_auth, create_at, updated_at
FROM user_info
WHERE user_id = $1
`

func (q *Queries) GetUserInfoByUserId(ctx context.Context, userID int32) (UserInfo, error) {
	row := q.db.QueryRowContext(ctx, getUserInfoByUserId, userID)
	var i UserInfo
	err := row.Scan(
		&i.UserID,
		&i.UserAccount,
		&i.UserName,
		&i.UserAvatar,
		&i.UserState,
		&i.UserPhone,
		&i.UserGender,
		&i.UserBirthday,
		&i.UserEmail,
		&i.UserIsAuth,
		&i.CreateAt,
		&i.UpdatedAt,
	)
	return i, err
}

const insertUserInfo = `-- name: InsertUserInfo :one
INSERT INTO user_info (
  user_id, user_account, user_name, user_state, user_is_auth, create_at, updated_at
) VALUES (
  $1, $2, $3, 1, 1, NOW(), NOW()
)
RETURNING user_id, user_account, user_name, user_avatar, user_state, user_phone, user_gender, user_birthday, user_email, user_is_auth, create_at, updated_at
`

type InsertUserInfoParams struct {
	UserID      int32
	UserAccount string
	UserName    sql.NullString
}

func (q *Queries) InsertUserInfo(ctx context.Context, arg InsertUserInfoParams) (UserInfo, error) {
	row := q.db.QueryRowContext(ctx, insertUserInfo, arg.UserID, arg.UserAccount, arg.UserName)
	var i UserInfo
	err := row.Scan(
		&i.UserID,
		&i.UserAccount,
		&i.UserName,
		&i.UserAvatar,
		&i.UserState,
		&i.UserPhone,
		&i.UserGender,
		&i.UserBirthday,
		&i.UserEmail,
		&i.UserIsAuth,
		&i.CreateAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateUserInfo = `-- name: UpdateUserInfo :exec
UPDATE user_info
SET 
  user_name = $2,
  user_avatar = $3,
  user_state = $4,
  user_phone = $5,
  user_gender = $6,
  user_birthday = $7,
  user_email = $8,
  user_is_auth = $9,
  updated_at = NOW()
WHERE user_id = $1
`

type UpdateUserInfoParams struct {
	UserID       int32
	UserName     sql.NullString
	UserAvatar   sql.NullString
	UserState    int16
	UserPhone    sql.NullString
	UserGender   sql.NullInt16
	UserBirthday sql.NullTime
	UserEmail    sql.NullString
	UserIsAuth   int16
}

func (q *Queries) UpdateUserInfo(ctx context.Context, arg UpdateUserInfoParams) error {
	_, err := q.db.ExecContext(ctx, updateUserInfo,
		arg.UserID,
		arg.UserName,
		arg.UserAvatar,
		arg.UserState,
		arg.UserPhone,
		arg.UserGender,
		arg.UserBirthday,
		arg.UserEmail,
		arg.UserIsAuth,
	)
	return err
}
